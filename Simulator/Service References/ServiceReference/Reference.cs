//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Simulator.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/Repository")]
    [System.SerializableAttribute()]
    public partial class Station : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Simulator.ServiceReference.Plane PlaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Simulator.ServiceReference.Plane Plane {
            get {
                return this.PlaneField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaneField, value) != true)) {
                    this.PlaneField = value;
                    this.RaisePropertyChanged("Plane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StationId {
            get {
                return this.StationIdField;
            }
            set {
                if ((this.StationIdField.Equals(value) != true)) {
                    this.StationIdField = value;
                    this.RaisePropertyChanged("StationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationName {
            get {
                return this.StationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StationNameField, value) != true)) {
                    this.StationNameField = value;
                    this.RaisePropertyChanged("StationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plane", Namespace="http://schemas.datacontract.org/2004/07/Repository")]
    [System.SerializableAttribute()]
    public partial class Plane : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaneIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneId {
            get {
                return this.PlaneIdField;
            }
            set {
                if ((this.PlaneIdField.Equals(value) != true)) {
                    this.PlaneIdField = value;
                    this.RaisePropertyChanged("PlaneId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCAhistory", Namespace="http://schemas.datacontract.org/2004/07/Repository")]
    [System.SerializableAttribute()]
    public partial class DCAhistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DCAhistoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeparturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LandingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Simulator.ServiceReference.Plane planeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Simulator.ServiceReference.Station stationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DCAhistoryId {
            get {
                return this.DCAhistoryIdField;
            }
            set {
                if ((this.DCAhistoryIdField.Equals(value) != true)) {
                    this.DCAhistoryIdField = value;
                    this.RaisePropertyChanged("DCAhistoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Departures {
            get {
                return this.DeparturesField;
            }
            set {
                if ((this.DeparturesField.Equals(value) != true)) {
                    this.DeparturesField = value;
                    this.RaisePropertyChanged("Departures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Landings {
            get {
                return this.LandingsField;
            }
            set {
                if ((this.LandingsField.Equals(value) != true)) {
                    this.LandingsField = value;
                    this.RaisePropertyChanged("Landings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Simulator.ServiceReference.Plane plane {
            get {
                return this.planeField;
            }
            set {
                if ((object.ReferenceEquals(this.planeField, value) != true)) {
                    this.planeField = value;
                    this.RaisePropertyChanged("plane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Simulator.ServiceReference.Station station {
            get {
                return this.stationField;
            }
            set {
                if ((object.ReferenceEquals(this.stationField, value) != true)) {
                    this.stationField = value;
                    this.RaisePropertyChanged("station");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IAirport", CallbackContract=typeof(Simulator.ServiceReference.IAirportCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAirport {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAirport/addplane")]
        void addplane();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAirport/addplane")]
        System.Threading.Tasks.Task addplaneAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAirport/planensInStations")]
        void planensInStations();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAirport/planensInStations")]
        System.Threading.Tasks.Task planensInStationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAirportCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/SendStations", ReplyAction="http://tempuri.org/IAirport/SendStationsResponse")]
        void SendStations(Simulator.ServiceReference.Station[] stations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/SenddCAhistorys", ReplyAction="http://tempuri.org/IAirport/SenddCAhistorysResponse")]
        void SenddCAhistorys(Simulator.ServiceReference.DCAhistory[] dCAhistorys);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAirportChannel : Simulator.ServiceReference.IAirport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AirportClient : System.ServiceModel.DuplexClientBase<Simulator.ServiceReference.IAirport>, Simulator.ServiceReference.IAirport {
        
        public AirportClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AirportClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AirportClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AirportClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AirportClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void addplane() {
            base.Channel.addplane();
        }
        
        public System.Threading.Tasks.Task addplaneAsync() {
            return base.Channel.addplaneAsync();
        }
        
        public void planensInStations() {
            base.Channel.planensInStations();
        }
        
        public System.Threading.Tasks.Task planensInStationsAsync() {
            return base.Channel.planensInStationsAsync();
        }
    }
}
